<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	id="WebApp_ID" version="3.0">
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<!-- 应用上下文配置文件 -->
		<param-value>
			classpath*:/application/applicationContext.xml
		</param-value>
	</context-param>
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
	<context-param>
		<param-name>log4jConfigLocation</param-name>
		<param-value>classpath:log4j.xml</param-value>
	</context-param>
	<listener>
		<listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
	</listener>
	<!-- <listener> <listener-class> org.springframework.web.util.IntrospectorCleanupListener</listener-class> 
		</listener> <listener> <listener-class> com.jc.base.coreapp.web.listener.AppContextServletListener</listener-class> 
		</listener> <listener> <listener-class> org.springframework.web.context.request.RequestContextListener</listener-class> 
		</listener> -->
	<!-- <filter> <filter-name>distributeSessionFilter</filter-name> <filter-class>org.jackychen.toolkits.session.filter.CatalinaDistributedSessionFilter</filter-class> 
		</filter> <filter-mapping> <filter-name>distributeSessionFilter</filter-name> 
		<url-pattern>/*</url-pattern> </filter-mapping> -->
	<!-- <filter> <filter-name>Set Character Encoding</filter-name> <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class> 
		<init-param> <param-name>encoding</param-name> <param-value>UTF-8</param-value> 
		</init-param> </filter> <filter-mapping> <filter-name>Set Character Encoding</filter-name> 
		<url-pattern>/*</url-pattern> </filter-mapping> -->

	<servlet>
		<servlet-name>comweb</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>namespace</param-name>
			<param-value>classes/comweb-servlet</param-value>
		</init-param>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>
	<servlet-mapping>
		<servlet-name>comweb</servlet-name>
		<url-pattern>/</url-pattern>
	</servlet-mapping>


	<session-config>
		<session-timeout>30</session-timeout>
	</session-config>

	<!-- 填写退出的URL -->
	<context-param>
		<param-name>casServerLogoutUrl</param-name>
		<param-value>http://member.server.com/logout</param-value>
	</context-param>
	<!--单点退出配置 -->
	<listener>
		<listener-class>
			org.jasig.cas.client.session.SingleSignOutHttpSessionListener
		</listener-class>
	</listener>
	<filter>
		<filter-name>CAS Single Sign Out Filter</filter-name>
		<filter-class>
			org.jasig.cas.client.session.SingleSignOutFilter
		</filter-class>
	</filter>

	<filter-mapping>
		<filter-name>CAS Single Sign Out Filter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>


	<!--2.负责Ticket校验 -->
	<filter>
		<filter-name>CAS Validation Filter</filter-name>
		<filter-class>
			org.jasig.cas.client.validation.Cas20ProxyReceivingTicketValidationFilter
		</filter-class>
		<init-param>
			<param-name>casServerUrlPrefix</param-name>
			<param-value>
				http://member.server.com
			</param-value>
		</init-param>
		<init-param>
			<param-name>serverName</param-name>
			<param-value>product.server.com:8888</param-value>
		</init-param>
		<init-param>
			<param-name>useSession</param-name>
			<param-value>true</param-value>
		</init-param>

		<init-param>
			<param-name>exceptionOnValidationFailure</param-name>
			<param-value>false</param-value>
		</init-param>

		<init-param>
			<param-name>redirectAfterValidation</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>

	<filter-mapping>
		<filter-name>CAS Validation Filter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<!-- 3. 单点登录验证 -->

	<filter>
		<filter-name>CAS Authentication Filter</filter-name>
		<filter-class>
			com.site.web.filter.AuthenticationFilter
		</filter-class>
		<init-param>
			<param-name>casServerLoginUrl</param-name>
			<param-value>
				http://member.server.com/login
			</param-value>
		</init-param>
		<init-param>
			<param-name>serverName</param-name>
			<param-value>http://product.server.com:8888</param-value>
		</init-param>
		<init-param>
			<param-name>exclusions</param-name>
			<param-value>/static/,/login/</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>CAS Authentication Filter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<!--4. CAS HttpServletRequest Wrapper Filter 这个是HttpServletRequet的包裹类，让他支持getUserPrincipal，getRemoteUser方法来取得用户信息 -->

	<filter>
		<filter-name>CAS HttpServletRequest Wrapper Filter</filter-name>
		<filter-class>
			org.jasig.cas.client.util.HttpServletRequestWrapperFilter
		</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>CAS HttpServletRequest Wrapper Filter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<!--5. CAS Assertion Thread Local Filter 这个类把Assertion信息放在ThreadLocal变量中，这样应用程序不在web层也能够获取到当前登录信息 -->
	<filter>
		<filter-name>CAS Assertion Thread Local Filter</filter-name>
		<filter-class>
			org.jasig.cas.client.util.AssertionThreadLocalFilter
		</filter-class>
	</filter>

	<filter-mapping>
		<filter-name>CAS Assertion Thread Local Filter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>


</web-app>  